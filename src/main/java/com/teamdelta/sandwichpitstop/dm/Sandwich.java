package com.teamdelta.sandwichpitstop.dm;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Sandwich generated by hbm2java
 */
@Entity
@Table(name = "sandwich", catalog = "sandwich_pit_stop")
@SuppressWarnings("serial")
public class Sandwich implements java.io.Serializable {

	private Integer sandwichId;
	private Order order;
	private User user;
	private String bread;
	private String substance;
	private String cheese;
	private boolean tomatos;
	private boolean lettuce;
	private String dressing;
	private boolean onions;
	private String comments;
	private String status;
	private Date placedTimestamp;
	private Date completeTimestamp;

	public Sandwich() {
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "sandwich_id", unique = true, nullable = false)
	public Integer getSandwichId() {
		return this.sandwichId;
	}

	public void setSandwichId(Integer sandwichId) {
		this.sandwichId = sandwichId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "order_id", nullable = false)
	public Order getOrder() {
		return this.order;
	}

	public void setOrder(Order order) {
		this.order = order;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "preparer_id")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "bread", nullable = false, length = 2)
	public String getBread() {
		return this.bread;
	}

	public void setBread(String bread) {
		this.bread = bread;
	}

	@Column(name = "substance", nullable = false, length = 2)
	public String getSubstance() {
		return this.substance;
	}

	public void setSubstance(String substance) {
		this.substance = substance;
	}

	@Column(name = "cheese", nullable = false, length = 2)
	public String getCheese() {
		return this.cheese;
	}

	public void setCheese(String cheese) {
		this.cheese = cheese;
	}

	@Column(name = "tomatos", nullable = false)
	public boolean isTomatos() {
		return this.tomatos;
	}

	public void setTomatos(boolean tomatos) {
		this.tomatos = tomatos;
	}

	@Column(name = "lettuce", nullable = false)
	public boolean isLettuce() {
		return this.lettuce;
	}

	public void setLettuce(boolean lettuce) {
		this.lettuce = lettuce;
	}

	@Column(name = "dressing", nullable = false, length = 2)
	public String getDressing() {
		return this.dressing;
	}

	public void setDressing(String dressing) {
		this.dressing = dressing;
	}

	@Column(name = "onions", nullable = false)
	public boolean isOnions() {
		return this.onions;
	}

	public void setOnions(boolean onions) {
		this.onions = onions;
	}

	@Column(name = "comments", length = 250)
	public String getComments() {
		return this.comments;
	}

	public void setComments(String comments) {
		this.comments = comments;
	}

	@Column(name = "status", nullable = false, length = 2)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "placed_timestamp", nullable = false, length = 19)
	public Date getPlacedTimestamp() {
		return this.placedTimestamp;
	}

	public void setPlacedTimestamp(Date placedTimestamp) {
		this.placedTimestamp = placedTimestamp;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "complete_timestamp", length = 19)
	public Date getCompleteTimestamp() {
		return this.completeTimestamp;
	}

	public void setCompleteTimestamp(Date completeTimestamp) {
		this.completeTimestamp = completeTimestamp;
	}

}
